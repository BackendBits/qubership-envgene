# This action is hidden from the GitHub Actions UI
name: 'Build Effective Set Generator Python Docker Image'
description: 'Build and push Effective Set Generator Python docker image to container registry'

inputs:
  registry:
    description: 'Container registry URL'
    required: false
    default: 'ghcr.io'
  repository-owner:
    description: 'Repository owner for Docker images'
    required: false
    default: 'netcracker'
  image-name:
    description: 'Docker image name'
    required: false
    default: 'qubership-effective-set-python'
  dockerfile-path:
    description: 'Path to Dockerfile'
    required: false
    default: './build_effective_set_generator/build/Dockerfile'
  gh-access-token:
    description: 'GitHub access token for build args'
    required: false
  github-token:
    description: 'GitHub token for registry login'
    required: true

outputs:
  custom-tag:
    description: 'Custom tag with timestamp'
    value: ${{ steps.generate-tags.outputs.custom_tag }}
  branch-tag:
    description: 'Branch-based tag'
    value: ${{ steps.generate-tags.outputs.branch_tag }}
  timestamp:
    description: 'Generated timestamp'
    value: ${{ steps.generate-tags.outputs.timestamp }}
  branch-latest-tag:
    description: 'Branch latest tag'
    value: ${{ steps.generate-tags.outputs.branch_latest_tag }}

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Generate Docker tags
      id: generate-tags
      uses: ./.github/actions/generate-docker-tags

    - name: Debug outputs
      shell: bash
      run: |
        echo "DEBUG: Checking outputs from generate-docker-tags action:"
        echo "custom_tag: ${{ steps.generate-tags.outputs.custom_tag }}"
        echo "branch_tag: ${{ steps.generate-tags.outputs.branch_tag }}"
        echo "timestamp: ${{ steps.generate-tags.outputs.timestamp }}"
        echo "branch_latest_tag: ${{ steps.generate-tags.outputs.branch_latest_tag }}"

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ inputs.repository-owner }}/${{ inputs.image-name }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-{{sha}},suffix={{timestamp}}
          type=raw,value={{branch}}_{{timestamp}}
    
    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ inputs.dockerfile-path }}
        push: true
        tags: |
          ${{ inputs.registry }}/${{ inputs.repository-owner }}/${{ inputs.image-name }}:${{ steps.generate-tags.outputs.custom_tag }}
          ${{ inputs.registry }}/${{ inputs.repository-owner }}/${{ inputs.image-name }}:${{ steps.generate-tags.outputs.branch_latest_tag }}
          ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          GH_ACCESS_TOKEN=${{ inputs.gh-access-token }} 